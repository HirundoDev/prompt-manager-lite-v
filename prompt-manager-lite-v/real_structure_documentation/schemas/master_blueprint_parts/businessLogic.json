{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://schemas.promptmanager.dev/business-logic/v3.0.0",
    "$comment": "Playbook: prompt_playbooks/schemas_playbooks/playbook_schema-businessLogic.md",
    "title": "Universal Business Logic Schema Template",
    "description": "Universal template for documenting business logic and domain models that works across any technology stack, architecture pattern, or business domain. This schema provides a structured approach to business logic documentation using placeholders that can be adapted to Domain-Driven Design, Clean Architecture, Hexagonal Architecture, or any other architectural approach. Follows modern software design practices and domain modeling patterns for 2025.",
    "type": "object",
    "additionalProperties": false,
    "required": [
        "domainInfo",
        "businessRules",
        "domainModel",
        "workflows"
    ],
    "properties": {
        "domainInfo": {
            "type": "object",
            "description": "Basic domain information and metadata",
            "required": [
                "domainName",
                "version",
                "description",
                "boundedContext"
            ],
            "additionalProperties": false,
            "properties": {
                "domainName": {
                    "type": "string",
                    "description": "Domain name - use placeholder [DOMAIN_NAME]",
                    "examples": [
                        "[DOMAIN_NAME]",
                        "[BUSINESS_DOMAIN]",
                        "[FUNCTIONAL_AREA]"
                    ]
                },
                "version": {
                    "type": "string",
                    "description": "Domain version - use placeholder [DOMAIN_VERSION]",
                    "examples": [
                        "[DOMAIN_VERSION]",
                        "[MAJOR].[MINOR].[PATCH]"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "Domain description - use placeholder [DOMAIN_DESCRIPTION]",
                    "examples": [
                        "[DOMAIN_DESCRIPTION]",
                        "Business logic for [BUSINESS_AREA]"
                    ]
                },
                "boundedContext": {
                    "type": "string",
                    "description": "Bounded context - use placeholder [BOUNDED_CONTEXT]",
                    "examples": [
                        "[BOUNDED_CONTEXT]",
                        "[CONTEXT_NAME]"
                    ]
                }
            }
        }
    }
}
},
"businessRules": {
"type": "array",
"description": "Business rules using placeholders",
"minItems": 1,
"items": {
    "type": "object",
    "required": [
        "ruleId",
        "ruleName",
        "description",
        "type"
    ],
    "properties": {
        "ruleId": {
            "type": "string",
            "description": "Rule identifier - use placeholder [RULE_ID]",
            "examples": [
                "[RULE_ID]",
                "[BUSINESS_RULE_ID]"
            ]
        },
        "ruleName": {
            "type": "string",
            "description": "Rule name - use placeholder [RULE_NAME]",
            "examples": [
                "[RULE_NAME]",
                "[BUSINESS_RULE_NAME]"
            ]
        },
        "description": {
            "type": "string",
            "description": "Rule description - use placeholder [RULE_DESCRIPTION]",
            "examples": [
                "[RULE_DESCRIPTION]",
                "[BUSINESS_RULE_DETAILS]"
            ]
        },
        "type": {
            "type": "string",
            "description": "Rule type - use placeholder [RULE_TYPE]",
            "examples": [
                "[RULE_TYPE]",
                "Validation",
                "Calculation",
                "Authorization",
                "Workflow",
                "[CUSTOM_RULE_TYPE]"
            ]
        },
        "priority": {
            "type": "string",
            "description": "Rule priority - use placeholder [RULE_PRIORITY]",
            "examples": [
                "[RULE_PRIORITY]",
                "Critical",
                "High",
                "Medium",
                "Low"
            ]
        },
        "conditions": {
            "type": "array",
            "description": "Rule conditions using placeholders",
            "items": {
                "type": "object",
                "properties": {
                    "condition": {
                        "type": "string",
                        "examples": [
                            "[RULE_CONDITION]",
                            "[BUSINESS_CONDITION]"
                        ]
                    },
                    "operator": {
                        "type": "string",
                        "examples": [
                            "[CONDITION_OPERATOR]",
                            "equals",
                            "greater_than",
                            "contains",
                            "[CUSTOM_OPERATOR]"
                        ]
                    },
                    "value": {
                        "type": "string",
                        "examples": [
                            "[CONDITION_VALUE]",
                            "[EXPECTED_VALUE]"
                        ]
                    }
                }
            }
        },
        "actions": {
            "type": "array",
            "description": "Rule actions using placeholders",
            "items": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "examples": [
                            "[RULE_ACTION]",
                            "[BUSINESS_ACTION]"
                        ]
                    },
                    "parameters": {
                        "type": "object",
                        "patternProperties": {
                            "^\\[.*\\]$": {
                                "description": "Action parameters",
                                "examples": [
                                    "[PARAMETER_VALUE]",
                                    "[ACTION_SETTING]"
                                ]
                            }
                        }
                    }
                }
            }
        },
        "exceptions": {
            "type": "array",
            "description": "Rule exceptions using placeholders",
            "items": {
                "type": "object",
                "properties": {
                    "exception": {
                        "type": "string",
                        "examples": [
                            "[EXCEPTION_CONDITION]",
                            "[SPECIAL_CASE]"
                        ]
                    },
                    "handling": {
                        "type": "string",
                        "examples": [
                            "[EXCEPTION_HANDLING]",
                            "[SPECIAL_CASE_ACTION]"
                        ]
                    }
                }
            }
        },
        "businessJustification": {
            "type": "string",
            "description": "Business justification - use placeholder [BUSINESS_JUSTIFICATION]",
            "examples": [
                "[BUSINESS_JUSTIFICATION]",
                "[RULE_RATIONALE]"
            ]
        },
        "owner": {
            "type": "string",
            "description": "Rule owner - use placeholder [RULE_OWNER]",
            "examples": [
                "[RULE_OWNER]",
                "[BUSINESS_OWNER]"
            ]
        },
        "lastUpdated": {
            "type": "string",
            "description": "Last update date - use placeholder [LAST_UPDATED]",
            "examples": [
                "[LAST_UPDATED]",
                "[UPDATE_DATE]"
            ]
        }
    }
}
},
"domainModel": {
"type": "object",
"description": "Domain model using placeholders",
"required": [
    "entities",
    "valueObjects"
],
"properties": {
    "entities": {
        "type": "array",
        "description": "Domain entities using placeholders",
        "items": {
            "type": "object",
            "required": [
                "entityName",
                "description",
                "attributes"
            ],
            "properties": {
                "entityName": {
                    "type": "string",
                    "description": "Entity name - use placeholder [ENTITY_NAME]",
                    "examples": [
                        "[ENTITY_NAME]",
                        "[DOMAIN_ENTITY]"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "Entity description - use placeholder [ENTITY_DESCRIPTION]",
                    "examples": [
                        "[ENTITY_DESCRIPTION]",
                        "[ENTITY_PURPOSE]"
                    ]
                },
                "type": {
                    "type": "string",
                    "description": "Entity type - use placeholder [ENTITY_TYPE]",
                    "examples": [
                        "[ENTITY_TYPE]",
                        "Aggregate Root",
                        "Entity",
                        "Domain Service",
                        "[CUSTOM_TYPE]"
                    ]
                },
                "attributes": {
                    "type": "array",
                    "description": "Entity attributes using placeholders",
                    "items": {
                        "type": "object",
                        "properties": {
                            "attributeName": {
                                "type": "string",
                                "examples": [
                                    "[ATTRIBUTE_NAME]",
                                    "[PROPERTY_NAME]"
                                ]
                            },
                            "dataType": {
                                "type": "string",
                                "examples": [
                                    "[DATA_TYPE]",
                                    "String",
                                    "Number",
                                    "Boolean",
                                    "Date",
                                    "[CUSTOM_TYPE]"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "examples": [
                                    "[ATTRIBUTE_DESCRIPTION]",
                                    "[PROPERTY_PURPOSE]"
                                ]
                            },
                            "constraints": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "examples": [
                                        "[ATTRIBUTE_CONSTRAINT]",
                                        "[VALIDATION_RULE]"
                                    ]
                                }
                            },
                            "businessRules": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "examples": [
                                        "[ATTRIBUTE_RULE]",
                                        "[BUSINESS_CONSTRAINT]"
                                    ]
                                }
                            }
                        }
                    }
                },
                "behaviors": {
                    "type": "array",
                    "description": "Entity behaviors using placeholders",
                    "items": {
                        "type": "object",
                        "properties": {
                            "behaviorName": {
                                "type": "string",
                                "examples": [
                                    "[BEHAVIOR_NAME]",
                                    "[METHOD_NAME]"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "examples": [
                                    "[BEHAVIOR_DESCRIPTION]",
                                    "[METHOD_PURPOSE]"
                                ]
                            },
                            "parameters": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "parameterName": {
                                            "type": "string",
                                            "examples": [
                                                "[PARAMETER_NAME]",
                                                "[INPUT_NAME]"
                                            ]
                                        },
                                        "dataType": {
                                            "type": "string",
                                            "examples": [
                                                "[PARAMETER_TYPE]",
                                                "[INPUT_TYPE]"
                                            ]
                                        }
                                    }
                                }
                            },
                            "returnType": {
                                "type": "string",
                                "examples": [
                                    "[RETURN_TYPE]",
                                    "[OUTPUT_TYPE]"
                                ]
                            },
                            "businessLogic": {
                                "type": "string",
                                "examples": [
                                    "[BUSINESS_LOGIC]",
                                    "[BEHAVIOR_LOGIC]"
                                ]
                            }
                        }
                    }
                },
                "relationships": {
                    "type": "array",
                    "description": "Entity relationships using placeholders",
                    "items": {
                        "type": "object",
                        "properties": {
                            "relationshipType": {
                                "type": "string",
                                "examples": [
                                    "[RELATIONSHIP_TYPE]",
                                    "One-to-One",
                                    "One-to-Many",
                                    "Many-to-Many",
                                    "Aggregation",
                                    "[CUSTOM_RELATIONSHIP]"
                                ]
                            },
                            "relatedEntity": {
                                "type": "string",
                                "examples": [
                                    "[RELATED_ENTITY]",
                                    "[TARGET_ENTITY]"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "examples": [
                                    "[RELATIONSHIP_DESCRIPTION]",
                                    "[ASSOCIATION_PURPOSE]"
                                ]
                            },
                            "constraints": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "examples": [
                                        "[RELATIONSHIP_CONSTRAINT]",
                                        "[ASSOCIATION_RULE]"
                                    ]
                                }
                            }
                        }
                    }
                },
                "invariants": {
                    "type": "array",
                    "description": "Entity invariants using placeholders",
                    "items": {
                        "type": "object",
                        "properties": {
                            "invariantName": {
                                "type": "string",
                                "examples": [
                                    "[INVARIANT_NAME]",
                                    "[BUSINESS_INVARIANT]"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "examples": [
                                    "[INVARIANT_DESCRIPTION]",
                                    "[INVARIANT_RULE]"
                                ]
                            },
                            "condition": {
                                "type": "string",
                                "examples": [
                                    "[INVARIANT_CONDITION]",
                                    "[BUSINESS_CONSTRAINT]"
                                ]
                            }
                        }
                    }
                }
            }
        }
    },
    "valueObjects": {
        "type": "array",
        "description": "Value objects using placeholders",
        "items": {
            "type": "object",
            "required": [
                "objectName",
                "description",
                "attributes"
            ],
            "properties": {
                "objectName": {
                    "type": "string",
                    "description": "Value object name - use placeholder [VALUE_OBJECT_NAME]",
                    "examples": [
                        "[VALUE_OBJECT_NAME]",
                        "[VALUE_TYPE_NAME]"
                    ]
                },
                "description": {
                    "type": "string",
                    "description": "Value object description - use placeholder [VALUE_OBJECT_DESCRIPTION]",
                    "examples": [
                        "[VALUE_OBJECT_DESCRIPTION]",
                        "[VALUE_PURPOSE]"
                    ]
                },
                "attributes": {
                    "type": "array",
                    "description": "Value object attributes using placeholders",
                    "items": {
                        "type": "object",
                        "properties": {
                            "attributeName": {
                                "type": "string",
                                "examples": [
                                    "[VALUE_ATTRIBUTE_NAME]",
                                    "[VALUE_PROPERTY]"
                                ]
                            },
                            "dataType": {
                                "type": "string",
                                "examples": [
                                    "[VALUE_DATA_TYPE]",
                                    "[VALUE_TYPE]"
                                ]
                            },
                            "constraints": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "examples": [
                                        "[VALUE_CONSTRAINT]",
                                        "[VALUE_VALIDATION]"
                                    ]
                                }
                            }
                        }
                    }
                },
                "validationRules": {
                    "type": "array",
                    "description": "Value object validation rules using placeholders",
                    "items": {
                        "type": "string",
                        "examples": [
                            "[VALIDATION_RULE]",
                            "[VALUE_RULE]"
                        ]
                    }
                },
                "immutability": {
                    "type": "boolean",
                    "description": "Whether the value object is immutable",
                    "examples": [
                        "[IS_IMMUTABLE]"
                    ]
                }
            }
        }
    },
    "aggregates": {
        "type": "array",
        "description": "Domain aggregates using placeholders",
        "items": {
            "type": "object",
            "properties": {
                "aggregateName": {
                    "type": "string",
                    "examples": [
                        "[AGGREGATE_NAME]",
                        "[AGGREGATE_ROOT_NAME]"
                    ]
                },
                "description": {
                    "type": "string",
                    "examples": [
                        "[AGGREGATE_DESCRIPTION]",
                        "[AGGREGATE_PURPOSE]"
                    ]
                },
                "aggregateRoot": {
                    "type": "string",
                    "examples": [
                        "[AGGREGATE_ROOT]",
                        "[ROOT_ENTITY]"
                    ]
                },
                "entities": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "examples": [
                            "[AGGREGATE_ENTITY]",
                            "[CHILD_ENTITY]"
                        ]
                    }
                },
                "valueObjects": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "examples": [
                            "[AGGREGATE_VALUE_OBJECT]",
                            "[VALUE_COMPONENT]"
                        ]
                    }
                },
                "businessRules": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "examples": [
                            "[AGGREGATE_RULE]",
                            "[AGGREGATE_CONSTRAINT]"
                        ]
                    }
                },
                "boundaries": {
                    "type": "string",
                    "examples": [
                        "[AGGREGATE_BOUNDARIES]",
                        "[CONSISTENCY_BOUNDARY]"
                    ]
                }
            }
        }
    },
    "domainServices": {
        "type": "array",
        "description": "Domain services using placeholders",
        "items": {
            "type": "object",
            "properties": {
                "serviceName": {
                    "type": "string",
                    "examples": [
                        "[SERVICE_NAME]",
                        "[DOMAIN_SERVICE_NAME]"
                    ]
                },
                "description": {
                    "type": "string",
                    "examples": [
                        "[SERVICE_DESCRIPTION]",
                        "[SERVICE_PURPOSE]"
                    ]
                },
                "operations": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "operationName": {
                                "type": "string",
                                "examples": [
                                    "[OPERATION_NAME]",
                                    "[SERVICE_METHOD]"
                                ]
                            },
                            "description": {
                                "type": "string",
                                "examples": [
                                    "[OPERATION_DESCRIPTION]",
                                    "[METHOD_PURPOSE]"
                                ]
                            },
                            "parameters": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "parameterName": {
                                            "type": "string",
                                            "examples": [
                                                "[OPERATION_PARAMETER]",
                                                "[METHOD_INPUT]"
                                            ]
                                        },
                                        "dataType": {
                                            "type": "string",
                                            "examples": [
                                                "[PARAMETER_DATA_TYPE]",
                                                "[INPUT_TYPE]"
                                            ]
                                        }
                                    }
                                }
                            },
                            "returnType": {
                                "type": "string",
                                "examples": [
                                    "[OPERATION_RETURN_TYPE]",
                                    "[METHOD_OUTPUT]"
                                ]
                            },
                            "businessLogic": {
                                "type": "string",
                                "examples": [
                                    "[OPERATION_LOGIC]",
                                    "[METHOD_BUSINESS_LOGIC]"
                                ]
                            }
                        }
                    }
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "examples": [
                            "[SERVICE_DEPENDENCY]",
                            "[REQUIRED_SERVICE]"
                        ]
                    }
                }
            }
        }
    }
}
},
"workflows": {
"type": "array",
"description": "Business workflows using placeholders",
"minItems": 1,
"items": {
    "type": "object",
    "required": [
        "workflowId",
        "workflowName",
        "description",
        "steps"
    ],
    "properties": {
        "workflowId": {
            "type": "string",
            "description": "Workflow identifier - use placeholder [WORKFLOW_ID]",
            "examples": [
                "[WORKFLOW_ID]",
                "[PROCESS_ID]"
            ]
        },
        "workflowName": {
            "type": "string",
            "description": "Workflow name - use placeholder [WORKFLOW_NAME]",
            "examples": [
                "[WORKFLOW_NAME]",
                "[BUSINESS_PROCESS_NAME]"
            ]
        },
        "description": {
            "type": "string",
            "description": "Workflow description - use placeholder [WORKFLOW_DESCRIPTION]",
            "examples": [
                "[WORKFLOW_DESCRIPTION]",
                "[PROCESS_PURPOSE]"
            ]
        },
        "trigger": {
            "type": "object",
            "description": "Workflow trigger using placeholders",
            "properties": {
                "triggerType": {
                    "type": "string",
                    "examples": [
                        "[TRIGGER_TYPE]",
                        "Event",
                        "Schedule",
                        "Manual",
                        "API Call",
                        "[CUSTOM_TRIGGER]"
                    ]
                },
                "triggerCondition": {
                    "type": "string",
                    "examples": [
                        "[TRIGGER_CONDITION]",
                        "[ACTIVATION_CONDITION]"
                    ]
                }
            }
        },
        "steps": {
            "type": "array",
            "description": "Workflow steps using placeholders",
            "items": {
                "type": "object",
                "properties": {
                    "stepId": {
                        "type": "string",
                        "examples": [
                            "[STEP_ID]",
                            "[PROCESS_STEP_ID]"
                        ]
                    },
                    "stepName": {
                        "type": "string",
                        "examples": [
                            "[STEP_NAME]",
                            "[PROCESS_STEP_NAME]"
                        ]
                    },
                    "description": {
                        "type": "string",
                        "examples": [
                            "[STEP_DESCRIPTION]",
                            "[STEP_PURPOSE]"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "examples": [
                            "[STEP_TYPE]",
                            "Task",
                            "Decision",
                            "Gateway",
                            "Event",
                            "[CUSTOM_STEP_TYPE]"
                        ]
                    },
                    "actor": {
                        "type": "string",
                        "examples": [
                            "[STEP_ACTOR]",
                            "[RESPONSIBLE_ROLE]"
                        ]
                    },
                    "businessLogic": {
                        "type": "string",
                        "examples": [
                            "[STEP_BUSINESS_LOGIC]",
                            "[STEP_RULES]"
                        ]
                    },
                    "inputs": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "examples": [
                                "[STEP_INPUT]",
                                "[INPUT_DATA]"
                            ]
                        }
                    },
                    "outputs": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "examples": [
                                "[STEP_OUTPUT]",
                                "[OUTPUT_DATA]"
                            ]
                        }
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "condition": {
                                    "type": "string",
                                    "examples": [
                                        "[STEP_CONDITION]",
                                        "[DECISION_CRITERIA]"
                                    ]
                                },
                                "nextStep": {
                                    "type": "string",
                                    "examples": [
                                        "[NEXT_STEP]",
                                        "[TARGET_STEP]"
                                    ]
                                }
                            }
                        }
                    },
                    "errorHandling": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "errorType": {
                                    "type": "string",
                                    "examples": [
                                        "[ERROR_TYPE]",
                                        "[EXCEPTION_TYPE]"
                                    ]
                                },
                                "handling": {
                                    "type": "string",
                                    "examples": [
                                        "[ERROR_HANDLING]",
                                        "[EXCEPTION_RESPONSE]"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "businessValue": {
            "type": "string",
            "description": "Business value - use placeholder [BUSINESS_VALUE]",
            "examples": [
                "[BUSINESS_VALUE]",
                "[WORKFLOW_BENEFIT]"
            ]
        },
        "owner": {
            "type": "string",
            "description": "Workflow owner - use placeholder [WORKFLOW_OWNER]",
            "examples": [
                "[WORKFLOW_OWNER]",
                "[PROCESS_OWNER]"
            ]
        },
        "sla": {
            "type": "object",
            "description": "Service level agreement using placeholders",
            "properties": {
                "responseTime": {
                    "type": "string",
                    "examples": [
                        "[RESPONSE_TIME]",
                        "[SLA_RESPONSE]"
                    ]
                },
                "throughput": {
                    "type": "string",
                    "examples": [
                        "[THROUGHPUT]",
                        "[PROCESSING_CAPACITY]"
                    ]
                },
                "availability": {
                    "type": "string",
                    "examples": [
                        "[AVAILABILITY]",
                        "[UPTIME_REQUIREMENT]"
                    ]
                }
            }
        }
    }
}
},
"integrations": {
"type": "object",
"description": "Domain integrations using placeholders",
"properties": {
    "externalSystems": {
        "type": "array",
        "description": "External system integrations using placeholders",
        "items": {
            "type": "object",
            "properties": {
                "systemName": {
                    "type": "string",
                    "examples": [
                        "[EXTERNAL_SYSTEM_NAME]",
                        "[INTEGRATION_TARGET]"
                    ]
                },
                "description": {
                    "type": "string",
                    "examples": [
                        "[SYSTEM_DESCRIPTION]",
                        "[INTEGRATION_PURPOSE]"
                    ]
                },
                "integrationType": {
                    "type": "string",
                    "examples": [
                        "[INTEGRATION_TYPE]",
                        "API",
                        "Message Queue",
                        "Database",
                        "File Transfer",
                        "[CUSTOM_INTEGRATION]"
                    ]
                },
                "dataExchange": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "dataType": {
                                "type": "string",
                                "examples": [
                                    "[DATA_TYPE]",
                                    "[EXCHANGE_DATA]"
                                ]
                            },
                            "direction": {
                                "type": "string",
                                "examples": [
                                    "[DATA_DIRECTION]",
                                    "Inbound",
                                    "Outbound",
                                    "Bidirectional"
                                ]
                            },
                            "format": {
                                "type": "string",
                                "examples": [
                                    "[DATA_FORMAT]",
                                    "JSON",
                                    "XML",
                                    "CSV",
                                    "[CUSTOM_FORMAT]"
                                ]
                            }
                        }
                    }
                },
                "businessRules": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "examples": [
                            "[INTEGRATION_RULE]",
                            "[EXCHANGE_RULE]"
                        ]
                    }
                }
            }
        }
    },
    "domainEvents": {
        "type": "array",
        "description": "Domain events using placeholders",
        "items": {
            "type": "object",
            "properties": {
                "eventName": {
                    "type": "string",
                    "examples": [
                        "[EVENT_NAME]",
                        "[DOMAIN_EVENT_NAME]"
                    ]
                },
                "description": {
                    "type": "string",
                    "examples": [
                        "[EVENT_DESCRIPTION]",
                        "[EVENT_PURPOSE]"
                    ]
                },
                "trigger": {
                    "type": "string",
                    "examples": [
                        "[EVENT_TRIGGER]",
                        "[EVENT_CONDITION]"
                    ]
                },
                "payload": {
                    "type": "object",
                    "patternProperties": {
                        "^\\[.*\\]$": {
                            "description": "Event payload data",
                            "examples": [
                                "[PAYLOAD_DATA]",
                                "[EVENT_DATA]"
                            ]
                        }
                    }
                },
                "subscribers": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "examples": [
                            "[EVENT_SUBSCRIBER]",
                            "[LISTENER_SERVICE]"
                        ]
                    }
                }
            }
        }
    }
}
},
"validation": {
"type": "object",
"description": "Domain validation using placeholders",
"properties": {
    "validationStrategies": {
        "type": "array",
        "description": "Validation strategies using placeholders",
        "items": {
            "type": "object",
            "properties": {
                "strategyName": {
                    "type": "string",
                    "examples": [
                        "[VALIDATION_STRATEGY]",
                        "[VALIDATION_APPROACH]"
                    ]
                },
                "description": {
                    "type": "string",
                    "examples": [
                        "[STRATEGY_DESCRIPTION]",
                        "[VALIDATION_PURPOSE]"
                    ]
                },
                "scope": {
                    "type": "string",
                    "examples": [
                        "[VALIDATION_SCOPE]",
                        "Entity",
                        "Aggregate",
                        "Domain Service",
                        "[CUSTOM_SCOPE]"
                    ]
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "examples": [
                            "[VALIDATION_RULE]",
                            "[VALIDATION_CONSTRAINT]"
                        ]
                    }
                }
            }
        }
    },
    "errorHandling": {
        "type": "object",
        "properties": {
            "errorTypes": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "errorType": {
                            "type": "string",
                            "examples": [
                                "[ERROR_TYPE]",
                                "[VALIDATION_ERROR_TYPE]"
                            ]
                        },
                        "description": {
                            "type": "string",
                            "examples": [
                                "[ERROR_DESCRIPTION]",
                                "[ERROR_MEANING]"
                            ]
                        },
                        "handling": {
                            "type": "string",
                            "examples": [
                                "[ERROR_HANDLING]",
                                "[ERROR_RESPONSE]"
                            ]
                        }
                    }
                }
            }
        }
    }
}
}
}
}