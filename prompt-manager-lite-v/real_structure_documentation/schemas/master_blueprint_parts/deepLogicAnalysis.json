{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$comment": "Playbook: prompt_playbooks/schemas_playbooks/playbook_schema-deepLogicAnalysis.md",
    "title": "Deep Logic Analysis Schema",
    "description": "Comprehensive code analysis framework following 2025 static analysis best practices. Supports complexity metrics, security vulnerability detection, maintainability assessment, and automated quality gates with AI-enhanced analysis capabilities.",
    "type": "object",
    "required": [
        "metadata",
        "analysisScope",
        "qualityMetrics",
        "findings"
    ],
    "properties": {
        "metadata": {
            "type": "object",
            "description": "Analysis metadata and configuration",
            "required": [
                "name",
                "version",
                "timestamp"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Analysis name or identifier",
                    "examples": [
                        "Payment Service Analysis",
                        "User Authentication Logic Review"
                    ]
                },
                "version": {
                    "type": "string",
                    "pattern": "^\\d+\\.\\d+\\.\\d+$",
                    "description": "Analysis version (semantic versioning)"
                },
                "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Analysis execution timestamp"
                },
                "description": {
                    "type": "string",
                    "description": "Analysis purpose and scope description"
                },
                "analyst": {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "role": {
                            "type": "string"
                        },
                        "email": {
                            "type": "string",
                            "format": "email"
                        }
                    }
                },
                "tools": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "version": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "static-analyzer",
                                    "complexity-analyzer",
                                    "security-scanner",
                                    "linter",
                                    "formatter",
                                    "ai-analyzer"
                                ]
                            },
                            "configuration": {
                                "type": "object"
                            }
                        }
                    },
                    "description": "Analysis tools used"
                },
                "standards": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "OWASP",
                            "NIST",
                            "ISO-25010",
                            "SOLID",
                            "Clean-Code",
                            "MISRA",
                            "CERT"
                        ]
                    },
                    "description": "Coding standards and frameworks applied"
                }
            }
        },
        "analysisScope": {
            "type": "object",
            "description": "Scope and boundaries of the analysis",
            "required": [
                "components"
            ],
            "properties": {
                "components": {
                    "type": "array",
                    "description": "Components included in analysis",
                    "items": {
                        "type": "object",
                        "required": [
                            "name",
                            "type",
                            "path"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Component name"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "service",
                                    "module",
                                    "class",
                                    "function",
                                    "package",
                                    "library",
                                    "api",
                                    "database",
                                    "configuration"
                                ]
                            },
                            "path": {
                                "type": "string",
                                "description": "File or directory path"
                            },
                            "language": {
                                "type": "string",
                                "enum": [
                                    "javascript",
                                    "typescript",
                                    "python",
                                    "java",
                                    "csharp",
                                    "go",
                                    "rust",
                                    "cpp",
                                    "php",
                                    "ruby"
                                ]
                            },
                            "framework": {
                                "type": "string"
                            },
                            "linesOfCode": {
                                "type": "number"
                            },
                            "lastModified": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "owner": {
                                "type": "string"
                            },
                            "criticality": {
                                "type": "string",
                                "enum": [
                                    "low",
                                    "medium",
                                    "high",
                                    "critical"
                                ]
                            },
                            "dependencies": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "exclusions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string"
                            },
                            "reason": {
                                "type": "string"
                            },
                            "pattern": {
                                "type": "string"
                            }
                        }
                    },
                    "description": "Files or patterns excluded from analysis"
                },
                "boundaries": {
                    "type": "object",
                    "properties": {
                        "maxComplexity": {
                            "type": "number"
                        },
                        "maxDepth": {
                            "type": "number"
                        },
                        "includeTests": {
                            "type": "boolean"
                        },
                        "includeThirdParty": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "qualityMetrics": {
            "type": "object",
            "description": "Code quality metrics and measurements",
            "properties": {
                "complexity": {
                    "type": "object",
                    "description": "Complexity metrics following 2025 standards",
                    "properties": {
                        "cyclomatic": {
                            "type": "object",
                            "properties": {
                                "average": {
                                    "type": "number"
                                },
                                "maximum": {
                                    "type": "number"
                                },
                                "distribution": {
                                    "type": "object",
                                    "properties": {
                                        "low": {
                                            "type": "number",
                                            "description": "Functions with complexity 1-10"
                                        },
                                        "moderate": {
                                            "type": "number",
                                            "description": "Functions with complexity 11-20"
                                        },
                                        "high": {
                                            "type": "number",
                                            "description": "Functions with complexity 21-50"
                                        },
                                        "veryHigh": {
                                            "type": "number",
                                            "description": "Functions with complexity >50"
                                        }
                                    }
                                }
                            }
                        },
                        "cognitive": {
                            "type": "object",
                            "description": "Cognitive complexity (SonarQube standard)",
                            "properties": {
                                "average": {
                                    "type": "number"
                                },
                                "maximum": {
                                    "type": "number"
                                },
                                "threshold": {
                                    "type": "number",
                                    "default": 15
                                }
                            }
                        },
                        "halstead": {
                            "type": "object",
                            "description": "Halstead complexity metrics",
                            "properties": {
                                "volume": {
                                    "type": "number"
                                },
                                "difficulty": {
                                    "type": "number"
                                },
                                "effort": {
                                    "type": "number"
                                },
                                "timeToUnderstand": {
                                    "type": "number"
                                }
                            }
                        },
                        "maintainabilityIndex": {
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100,
                            "description": "Microsoft maintainability index (0-100)"
                        }
                    }
                },
                "codeQuality": {
                    "type": "object",
                    "description": "Code quality indicators",
                    "properties": {
                        "duplication": {
                            "type": "object",
                            "properties": {
                                "percentage": {
                                    "type": "number"
                                },
                                "blocks": {
                                    "type": "number"
                                },
                                "lines": {
                                    "type": "number"
                                }
                            }
                        },
                        "coverage": {
                            "type": "object",
                            "properties": {
                                "line": {
                                    "type": "number"
                                },
                                "branch": {
                                    "type": "number"
                                },
                                "function": {
                                    "type": "number"
                                },
                                "statement": {
                                    "type": "number"
                                }
                            }
                        },
                        "technicalDebt": {
                            "type": "object",
                            "properties": {
                                "ratio": {
                                    "type": "number"
                                },
                                "minutes": {
                                    "type": "number"
                                },
                                "rating": {
                                    "type": "string",
                                    "enum": [
                                        "A",
                                        "B",
                                        "C",
                                        "D",
                                        "E"
                                    ]
                                }
                            }
                        },
                        "codeSmells": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "number"
                                },
                                "blocker": {
                                    "type": "number"
                                },
                                "critical": {
                                    "type": "number"
                                },
                                "major": {
                                    "type": "number"
                                },
                                "minor": {
                                    "type": "number"
                                },
                                "info": {
                                    "type": "number"
                                }
                            }
                        }
                    }
                },
                "security": {
                    "type": "object",
                    "description": "Security analysis metrics",
                    "properties": {
                        "vulnerabilities": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "number"
                                },
                                "critical": {
                                    "type": "number"
                                },
                                "high": {
                                    "type": "number"
                                },
                                "medium": {
                                    "type": "number"
                                },
                                "low": {
                                    "type": "number"
                                }
                            }
                        },
                        "hotspots": {
                            "type": "object",
                            "properties": {
                                "total": {
                                    "type": "number"
                                },
                                "toReview": {
                                    "type": "number"
                                },
                                "reviewed": {
                                    "type": "number"
                                }
                            }
                        },
                        "securityRating": {
                            "type": "string",
                            "enum": [
                                "A",
                                "B",
                                "C",
                                "D",
                                "E"
                            ]
                        }
                    }
                },
                "performance": {
                    "type": "object",
                    "description": "Performance-related metrics",
                    "properties": {
                        "algorithmicComplexity": {
                            "type": "object",
                            "properties": {
                                "timeComplexity": {
                                    "type": "string"
                                },
                                "spaceComplexity": {
                                    "type": "string"
                                },
                                "worstCase": {
                                    "type": "string"
                                }
                            }
                        },
                        "memoryUsage": {
                            "type": "object",
                            "properties": {
                                "estimated": {
                                    "type": "string"
                                },
                                "leakRisk": {
                                    "type": "string",
                                    "enum": [
                                        "low",
                                        "medium",
                                        "high"
                                    ]
                                }
                            }
                        },
                        "concurrency": {
                            "type": "object",
                            "properties": {
                                "threadSafety": {
                                    "type": "boolean"
                                },
                                "raceConditions": {
                                    "type": "number"
                                },
                                "deadlockRisk": {
                                    "type": "string",
                                    "enum": [
                                        "low",
                                        "medium",
                                        "high"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "findings": {
            "type": "array",
            "description": "Detailed analysis findings and issues",
            "items": {
                "type": "object",
                "required": [
                    "id",
                    "type",
                    "severity",
                    "component",
                    "description"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Unique finding identifier"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "complexity-violation",
                            "code-smell",
                            "bug",
                            "vulnerability",
                            "performance-issue",
                            "maintainability-issue",
                            "design-flaw",
                            "logic-error",
                            "edge-case",
                            "inconsistency",
                            "anti-pattern",
                            "security-hotspot",
                            "concurrency-issue",
                            "memory-leak"
                        ]
                    },
                    "severity": {
                        "type": "string",
                        "enum": [
                            "blocker",
                            "critical",
                            "major",
                            "minor",
                            "info"
                        ]
                    },
                    "component": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "path": {
                                "type": "string"
                            },
                            "line": {
                                "type": "number"
                            },
                            "column": {
                                "type": "number"
                            },
                            "function": {
                                "type": "string"
                            },
                            "class": {
                                "type": "string"
                            }
                        }
                    },
                    "description": {
                        "type": "string",
                        "description": "Detailed finding description"
                    },
                    "message": {
                        "type": "string",
                        "description": "Short summary message"
                    },
                    "rule": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "category": {
                                "type": "string"
                            },
                            "standard": {
                                "type": "string"
                            }
                        }
                    },
                    "impact": {
                        "type": "object",
                        "description": "Impact assessment",
                        "properties": {
                            "reliability": {
                                "type": "string",
                                "enum": [
                                    "low",
                                    "medium",
                                    "high"
                                ]
                            },
                            "security": {
                                "type": "string",
                                "enum": [
                                    "low",
                                    "medium",
                                    "high"
                                ]
                            },
                            "maintainability": {
                                "type": "string",
                                "enum": [
                                    "low",
                                    "medium",
                                    "high"
                                ]
                            },
                            "performance": {
                                "type": "string",
                                "enum": [
                                    "low",
                                    "medium",
                                    "high"
                                ]
                            }
                        }
                    },
                    "effort": {
                        "type": "object",
                        "description": "Remediation effort estimation",
                        "properties": {
                            "minutes": {
                                "type": "number"
                            },
                            "complexity": {
                                "type": "string",
                                "enum": [
                                    "trivial",
                                    "easy",
                                    "medium",
                                    "hard",
                                    "complex"
                                ]
                            },
                            "skillLevel": {
                                "type": "string",
                                "enum": [
                                    "junior",
                                    "mid",
                                    "senior",
                                    "expert"
                                ]
                            }
                        }
                    },
                    "recommendation": {
                        "type": "object",
                        "description": "Remediation recommendations",
                        "properties": {
                            "action": {
                                "type": "string"
                            },
                            "priority": {
                                "type": "string",
                                "enum": [
                                    "low",
                                    "medium",
                                    "high",
                                    "urgent"
                                ]
                            },
                            "alternatives": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "examples": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "before": {
                                            "type": "string"
                                        },
                                        "after": {
                                            "type": "string"
                                        },
                                        "explanation": {
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "references": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "context": {
                        "type": "object",
                        "description": "Additional context information",
                        "properties": {
                            "codeSnippet": {
                                "type": "string"
                            },
                            "surroundingCode": {
                                "type": "string"
                            },
                            "callStack": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "dataFlow": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "tool": {
                                "type": "string"
                            },
                            "ruleVersion": {
                                "type": "string"
                            },
                            "confidence": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1
                            },
                            "falsePositiveRisk": {
                                "type": "string",
                                "enum": [
                                    "low",
                                    "medium",
                                    "high"
                                ]
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "domains": {
            "type": "array",
            "description": "Business domain analysis with logic patterns",
            "items": {
                "type": "object",
                "required": [
                    "name",
                    "description"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Domain name"
                    },
                    "description": {
                        "type": "string",
                        "description": "Domain description and purpose"
                    },
                    "businessRules": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "implementation": {
                                    "type": "string"
                                },
                                "validation": {
                                    "type": "string"
                                },
                                "exceptions": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "invariants": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "condition": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "enforcement": {
                                    "type": "string"
                                },
                                "violations": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "edgeCases": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "scenario": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "handling": {
                                    "type": "string"
                                },
                                "testCoverage": {
                                    "type": "boolean"
                                },
                                "riskLevel": {
                                    "type": "string",
                                    "enum": [
                                        "low",
                                        "medium",
                                        "high",
                                        "critical"
                                    ]
                                }
                            }
                        }
                    },
                    "failureModes": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "mode": {
                                    "type": "string"
                                },
                                "cause": {
                                    "type": "string"
                                },
                                "effect": {
                                    "type": "string"
                                },
                                "detection": {
                                    "type": "string"
                                },
                                "mitigation": {
                                    "type": "string"
                                },
                                "probability": {
                                    "type": "string",
                                    "enum": [
                                        "very-low",
                                        "low",
                                        "medium",
                                        "high",
                                        "very-high"
                                    ]
                                }
                            }
                        }
                    },
                    "decisionPoints": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "context": {
                                    "type": "string"
                                },
                                "alternatives": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "option": {
                                                "type": "string"
                                            },
                                            "pros": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "cons": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "complexity": {
                                                "type": "number"
                                            },
                                            "risk": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "chosen": {
                                    "type": "string"
                                },
                                "rationale": {
                                    "type": "string"
                                },
                                "tradeoffs": {
                                    "type": "string"
                                },
                                "reviewDate": {
                                    "type": "string",
                                    "format": "date"
                                },
                                "links": {
                                    "type": "object",
                                    "properties": {
                                        "adr": {
                                            "type": "string"
                                        },
                                        "code": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "documentation": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "criticalPaths": {
            "type": "array",
            "description": "Critical execution paths and flows",
            "items": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "steps"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "criticality": {
                        "type": "string",
                        "enum": [
                            "low",
                            "medium",
                            "high",
                            "critical"
                        ]
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "order": {
                                    "type": "number"
                                },
                                "action": {
                                    "type": "string"
                                },
                                "component": {
                                    "type": "string"
                                },
                                "duration": {
                                    "type": "string"
                                },
                                "complexity": {
                                    "type": "number"
                                },
                                "errorHandling": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "preconditions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "condition": {
                                    "type": "string"
                                },
                                "validation": {
                                    "type": "string"
                                },
                                "fallback": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "postconditions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "condition": {
                                    "type": "string"
                                },
                                "verification": {
                                    "type": "string"
                                },
                                "cleanup": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "metrics": {
                        "type": "object",
                        "properties": {
                            "executionTime": {
                                "type": "string"
                            },
                            "throughput": {
                                "type": "string"
                            },
                            "errorRate": {
                                "type": "number"
                            },
                            "successRate": {
                                "type": "number"
                            }
                        }
                    },
                    "monitoring": {
                        "type": "object",
                        "properties": {
                            "alerts": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "dashboards": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "logs": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "risks": {
            "type": "array",
            "description": "Risk assessment and mitigation strategies",
            "items": {
                "type": "object",
                "required": [
                    "id",
                    "description",
                    "likelihood",
                    "impact"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "technical",
                            "security",
                            "performance",
                            "maintainability",
                            "business",
                            "operational"
                        ]
                    },
                    "description": {
                        "type": "string"
                    },
                    "likelihood": {
                        "type": "string",
                        "enum": [
                            "very-low",
                            "low",
                            "medium",
                            "high",
                            "very-high"
                        ]
                    },
                    "impact": {
                        "type": "string",
                        "enum": [
                            "very-low",
                            "low",
                            "medium",
                            "high",
                            "very-high"
                        ]
                    },
                    "riskScore": {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 25,
                        "description": "Calculated risk score (likelihood × impact)"
                    },
                    "triggers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Conditions that could trigger this risk"
                    },
                    "indicators": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Early warning indicators"
                    },
                    "mitigations": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "strategy": {
                                    "type": "string"
                                },
                                "action": {
                                    "type": "string"
                                },
                                "owner": {
                                    "type": "string"
                                },
                                "timeline": {
                                    "type": "string"
                                },
                                "cost": {
                                    "type": "string"
                                },
                                "effectiveness": {
                                    "type": "string",
                                    "enum": [
                                        "low",
                                        "medium",
                                        "high"
                                    ]
                                }
                            }
                        }
                    },
                    "contingency": {
                        "type": "object",
                        "properties": {
                            "plan": {
                                "type": "string"
                            },
                            "resources": {
                                "type": "string"
                            },
                            "timeline": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "controls": {
            "type": "array",
            "description": "Quality controls and monitoring mechanisms",
            "items": {
                "type": "object",
                "required": [
                    "type",
                    "target",
                    "frequency"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "monitor",
                            "alert",
                            "test",
                            "gate",
                            "review",
                            "audit"
                        ]
                    },
                    "target": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "frequency": {
                        "type": "string",
                        "enum": [
                            "continuous",
                            "daily",
                            "weekly",
                            "monthly",
                            "on-change",
                            "on-demand"
                        ]
                    },
                    "automation": {
                        "type": "object",
                        "properties": {
                            "automated": {
                                "type": "boolean"
                            },
                            "tool": {
                                "type": "string"
                            },
                            "configuration": {
                                "type": "object"
                            }
                        }
                    },
                    "thresholds": {
                        "type": "object",
                        "properties": {
                            "warning": {
                                "type": "string"
                            },
                            "critical": {
                                "type": "string"
                            },
                            "acceptable": {
                                "type": "string"
                            }
                        }
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "trigger": {
                                    "type": "string"
                                },
                                "action": {
                                    "type": "string"
                                },
                                "owner": {
                                    "type": "string"
                                },
                                "escalation": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "recommendations": {
            "type": "object",
            "description": "Overall recommendations and improvement roadmap",
            "properties": {
                "immediate": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "action": {
                                "type": "string"
                            },
                            "rationale": {
                                "type": "string"
                            },
                            "effort": {
                                "type": "string"
                            },
                            "impact": {
                                "type": "string"
                            },
                            "priority": {
                                "type": "number"
                            }
                        }
                    }
                },
                "shortTerm": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "action": {
                                "type": "string"
                            },
                            "rationale": {
                                "type": "string"
                            },
                            "effort": {
                                "type": "string"
                            },
                            "impact": {
                                "type": "string"
                            },
                            "timeline": {
                                "type": "string"
                            }
                        }
                    }
                },
                "longTerm": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "action": {
                                "type": "string"
                            },
                            "rationale": {
                                "type": "string"
                            },
                            "effort": {
                                "type": "string"
                            },
                            "impact": {
                                "type": "string"
                            },
                            "timeline": {
                                "type": "string"
                            }
                        }
                    }
                },
                "architectural": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "pattern": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "benefits": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "tradeoffs": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "links": {
            "type": "object",
            "description": "Related documentation and resources",
            "properties": {
                "adrs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Architecture Decision Records"
                },
                "runbooks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Operational runbooks"
                },
                "code": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Code repositories and files"
                },
                "documentation": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Related documentation"
                },
                "tools": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Analysis tools and dashboards"
                },
                "standards": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Coding standards and guidelines"
                }
            }
        }
    },
    "examples": [
        {
            "metadata": {
                "name": "Payment Service Logic Analysis",
                "version": "1.2.0",
                "timestamp": "2025-01-15T14:30:00Z",
                "description": "Comprehensive analysis of payment processing logic",
                "analyst": {
                    "name": "Jane Smith",
                    "role": "Senior Software Architect",
                    "email": "jane.smith@company.com"
                },
                "tools": [
                    {
                        "name": "SonarQube",
                        "version": "9.9",
                        "type": "static-analyzer"
                    },
                    {
                        "name": "ESLint",
                        "version": "8.57.0",
                        "type": "linter"
                    }
                ],
                "standards": [
                    "OWASP",
                    "SOLID",
                    "Clean-Code"
                ]
            },
            "analysisScope": {
                "components": [
                    {
                        "name": "PaymentProcessor",
                        "type": "service",
                        "path": "src/services/payment/PaymentProcessor.ts",
                        "language": "typescript",
                        "framework": "Node.js",
                        "linesOfCode": 450,
                        "criticality": "critical",
                        "dependencies": [
                            "stripe",
                            "paypal-sdk",
                            "database"
                        ]
                    }
                ],
                "boundaries": {
                    "maxComplexity": 15,
                    "includeTests": true,
                    "includeThirdParty": false
                }
            },
            "qualityMetrics": {
                "complexity": {
                    "cyclomatic": {
                        "average": 8.5,
                        "maximum": 23,
                        "distribution": {
                            "low": 15,
                            "moderate": 8,
                            "high": 3,
                            "veryHigh": 1
                        }
                    },
                    "cognitive": {
                        "average": 12.3,
                        "maximum": 28,
                        "threshold": 15
                    },
                    "maintainabilityIndex": 72
                },
                "codeQuality": {
                    "duplication": {
                        "percentage": 3.2,
                        "blocks": 5,
                        "lines": 45
                    },
                    "coverage": {
                        "line": 85.5,
                        "branch": 78.2,
                        "function": 92.1
                    },
                    "technicalDebt": {
                        "ratio": 0.8,
                        "minutes": 120,
                        "rating": "B"
                    }
                },
                "security": {
                    "vulnerabilities": {
                        "total": 2,
                        "critical": 0,
                        "high": 1,
                        "medium": 1,
                        "low": 0
                    },
                    "securityRating": "B"
                }
            },
            "findings": [
                {
                    "id": "COMPLEX-001",
                    "type": "complexity-violation",
                    "severity": "major",
                    "component": {
                        "name": "PaymentProcessor",
                        "path": "src/services/payment/PaymentProcessor.ts",
                        "line": 145,
                        "function": "processPayment"
                    },
                    "description": "Function has cyclomatic complexity of 23, exceeding threshold of 15",
                    "message": "Reduce function complexity",
                    "rule": {
                        "id": "complexity",
                        "name": "Cyclomatic Complexity",
                        "category": "maintainability"
                    },
                    "impact": {
                        "maintainability": "high",
                        "reliability": "medium"
                    },
                    "effort": {
                        "minutes": 180,
                        "complexity": "medium",
                        "skillLevel": "mid"
                    },
                    "recommendation": {
                        "action": "Extract smaller functions and use strategy pattern",
                        "priority": "high",
                        "alternatives": [
                            "Split into multiple functions",
                            "Use command pattern",
                            "Implement state machine"
                        ]
                    }
                }
            ],
            "domains": [
                {
                    "name": "Payment Processing",
                    "description": "Core payment processing logic and workflows",
                    "businessRules": [
                        {
                            "id": "BR-001",
                            "name": "Payment Validation",
                            "description": "All payments must be validated before processing",
                            "implementation": "validatePayment() function",
                            "validation": "Unit tests and integration tests"
                        }
                    ],
                    "invariants": [
                        {
                            "condition": "amount > 0",
                            "description": "Payment amount must be positive",
                            "enforcement": "Input validation",
                            "violations": 0
                        }
                    ],
                    "edgeCases": [
                        {
                            "scenario": "Network timeout during payment",
                            "description": "Payment gateway becomes unavailable",
                            "handling": "Retry with exponential backoff",
                            "testCoverage": true,
                            "riskLevel": "high"
                        }
                    ]
                }
            ],
            "criticalPaths": [
                {
                    "id": "CP-001",
                    "name": "Credit Card Payment Flow",
                    "description": "End-to-end credit card payment processing",
                    "criticality": "critical",
                    "steps": [
                        {
                            "order": 1,
                            "action": "Validate payment data",
                            "component": "PaymentValidator",
                            "duration": "50ms",
                            "complexity": 5
                        },
                        {
                            "order": 2,
                            "action": "Process payment with gateway",
                            "component": "PaymentGateway",
                            "duration": "2000ms",
                            "complexity": 12
                        }
                    ],
                    "metrics": {
                        "executionTime": "2.5s average",
                        "throughput": "100 payments/minute",
                        "errorRate": 0.02,
                        "successRate": 0.98
                    }
                }
            ],
            "risks": [
                {
                    "id": "RISK-001",
                    "category": "security",
                    "description": "Potential SQL injection in payment logging",
                    "likelihood": "low",
                    "impact": "high",
                    "riskScore": 15,
                    "mitigations": [
                        {
                            "strategy": "Use parameterized queries",
                            "action": "Replace string concatenation with prepared statements",
                            "owner": "Security Team",
                            "timeline": "1 week",
                            "effectiveness": "high"
                        }
                    ]
                }
            ],
            "controls": [
                {
                    "id": "CTRL-001",
                    "name": "Complexity Monitoring",
                    "type": "monitor",
                    "target": "Cyclomatic complexity",
                    "frequency": "on-change",
                    "automation": {
                        "automated": true,
                        "tool": "SonarQube"
                    },
                    "thresholds": {
                        "warning": "complexity > 10",
                        "critical": "complexity > 15"
                    }
                }
            ]
        }
    ]
}