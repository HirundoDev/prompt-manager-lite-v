{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$comment": "Playbook: prompt_playbooks/schemas_playbooks/playbook_schema-apiContract.md",
    "title": "API Contract",
    "description": "(Generated by Backend Architect) The definitive specification for the application's API, detailing all endpoints, request/response formats, and authentication methods.",
    "type": "object",
    "properties": {
        "endpoints": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "path": { "type": "string" },
                    "method": { "type": "string", "enum": ["GET", "POST", "PUT", "DELETE", "PATCH"] },
                    "summary": { "type": "string" },
                    "description": { "type": "string" },
                    "operationId": { "type": "string" },
                    "tags": { "type": "array", "items": { "type": "string" } },
                    "parameters": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": { "type": "string" },
                                "in": { "type": "string", "enum": ["path", "query", "header", "cookie"] },
                                "required": { "type": "boolean" },
                                "schema": { "type": "object" },
                                "description": { "type": "string" }
                            }
                        }
                    },
                    "requestBodySchema": { "type": "object" },
                    "responseBodySchema": { "type": "object" },
                    "request": {
                        "type": "object",
                        "properties": {
                            "contentTypes": { "type": "array", "items": { "type": "string" } },
                            "headers": { "type": "object", "additionalProperties": { "type": "string" } },
                            "bodySchema": { "type": "object" }
                        }
                    },
                    "responses": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "status": { "type": "integer" },
                                "description": { "type": "string" },
                                "headers": { "type": "object", "additionalProperties": { "type": "string" } },
                                "bodySchema": { "type": "object" },
                                "example": { "type": "object" }
                            }
                        }
                    },
                    "security": {
                        "type": "object",
                        "properties": {
                            "scopes": { "type": "array", "items": { "type": "string" } },
                            "roles": { "type": "array", "items": { "type": "string" } }
                        }
                    },
                    "idempotencyKey": { "type": "boolean" },
                    "rateLimit": {
                        "type": "object",
                        "properties": {
                            "policy": { "type": "string" },
                            "headers": { "type": "array", "items": { "type": "string" } }
                        }
                    },
                    "caching": {
                        "type": "object",
                        "properties": {
                            "etag": { "type": "boolean" },
                            "lastModified": { "type": "boolean" },
                            "cacheControl": { "type": "string" }
                        }
                    },
                    "tracing": {
                        "type": "object",
                        "properties": {
                            "correlationIdHeader": { "type": "string" }
                        }
                    }
                }
            }
        },
        "authentication": {
            "type": "object",
            "properties": {
                "type": { "type": "string", "enum": ["OAuth 2.0", "JWT", "API Key", "None"] },
                "details": { "type": "string" },
                "oauth2": {
                    "type": "object",
                    "properties": {
                        "flows": { "type": "array", "items": { "type": "string", "enum": ["client_credentials", "authorization_code", "password", "implicit", "device_code"] } },
                        "tokenUrl": { "type": "string" },
                        "authUrl": { "type": "string" },
                        "scopes": { "type": "array", "items": { "type": "string" } }
                    }
                },
                "apiKey": {
                    "type": "object",
                    "properties": {
                        "in": { "type": "string", "enum": ["header", "query", "cookie"] },
                        "name": { "type": "string" }
                    }
                },
                "jwt": {
                    "type": "object",
                    "properties": {
                        "alg": { "type": "string" },
                        "issuer": { "type": "string" },
                        "audiences": { "type": "array", "items": { "type": "string" } },
                        "expiresIn": { "type": "string" }
                    }
                }
            }
        },
        "version": { "type": "string" },
        "servers": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "url": { "type": "string" },
                    "description": { "type": "string" }
                }
            }
        },
        "tags": { "type": "array", "items": { "type": "string" } },
        "components": {
            "type": "object",
            "properties": {
                "schemas": { "type": "object", "additionalProperties": { "type": "object" } },
                "parameters": { "type": "object", "additionalProperties": { "type": "object" } },
                "headers": { "type": "object", "additionalProperties": { "type": "object" } },
                "responses": { "type": "object", "additionalProperties": { "type": "object" } }
            }
        },
        "policies": {
            "type": "object",
            "properties": {
                "errorModel": { "type": "object" },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "style": { "type": "string", "enum": ["page", "cursor"] },
                        "defaultPageSize": { "type": "integer" },
                        "maxPageSize": { "type": "integer" },
                        "cursorField": { "type": "string" }
                    }
                },
                "rateLimit": {
                    "type": "object",
                    "properties": {
                        "policy": { "type": "string" },
                        "headers": { "type": "array", "items": { "type": "string" } }
                    }
                },
                "caching": {
                    "type": "object",
                    "properties": {
                        "etag": { "type": "boolean" },
                        "lastModified": { "type": "boolean" },
                        "cacheControl": { "type": "string" }
                    }
                },
                "deprecation": {
                    "type": "object",
                    "properties": {
                        "policy": { "type": "string" },
                        "sunsetHeader": { "type": "boolean" }
                    }
                },
                "retries": {
                    "type": "object",
                    "properties": {
                        "retryableStatus": { "type": "array", "items": { "type": "integer" } },
                        "policy": { "type": "string" }
                    }
                },
                "timeouts": {
                    "type": "object",
                    "properties": {
                        "requestTimeoutMs": { "type": "integer" }
                    }
                },
                "headersReserved": { "type": "array", "items": { "type": "string" } }
            }
        }
    }
}