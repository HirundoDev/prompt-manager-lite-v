{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$comment": "Playbook: prompt_playbooks/schemas_playbooks/playbook_schema-architecture.md",
    "title": "Software Architecture",
    "description": "(Generated by Software Architect) The high-level architectural plan for the system.",
    "type": "object",
    "properties": {
        "architecturalPattern": {
            "type": "string",
            "enum": ["Monolithic", "Microservices", "Serverless", "Layered", "Event-Driven", "Other"],
            "description": "The primary architectural pattern chosen."
        },
        "technologyStack": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "layer": { "type": "string", "enum": ["Frontend", "Backend", "Database", "Cache", "MessageQueue"] },
                    "technology": { "type": "string" },
                    "version": { "type": "string" }
                }
            }
        },
        "communicationStyle": {
            "type": "string",
            "enum": ["REST", "GraphQL", "gRPC", "WebSocket", "Message-Based"],
            "description": "How different components or services communicate."
        },
        "dataFlowDiagram": {
            "type": "string",
            "description": "A high-level description or link to a diagram showing data flow."
        },
        "services": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "name": { "type": "string" },
                    "responsibilities": { "type": "array", "items": { "type": "string" } },
                    "ownsData": { "type": "boolean" },
                    "dependencies": { "type": "array", "items": { "type": "string" } },
                    "communication": { "type": "string" },
                    "runtime": { "type": "string" },
                    "scaling": {
                        "type": "object",
                        "properties": {
                            "min": { "type": "integer" },
                            "max": { "type": "integer" },
                            "strategy": { "type": "string" }
                        }
                    }
                }
            }
        },
        "deploymentTopology": {
            "type": "object",
            "properties": {
                "environments": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": { "type": "string" },
                            "regions": { "type": "array", "items": { "type": "string" } },
                            "nodes": { "type": "array", "items": { "type": "object", "properties": { "name": { "type": "string" }, "replicas": { "type": "integer" } } } },
                            "ingress": { "type": "object", "properties": { "type": { "type": "string" } } },
                            "cdn": { "type": "boolean" }
                        }
                    }
                }
            }
        },
        "dataManagement": {
            "type": "object",
            "properties": {
                "databases": { "type": "array", "items": { "type": "object", "properties": { "name": { "type": "string" }, "engine": { "type": "string" }, "version": { "type": "string" } } } },
                "consistency": { "type": "string", "enum": ["strong", "eventual", "bounded-staleness", "causal"] },
                "backup": { "type": "object", "properties": { "schedule": { "type": "string" }, "retentionDays": { "type": "integer" } } }
            }
        },
        "observability": {
            "type": "object",
            "properties": {
                "logging": { "type": "string" },
                "metrics": { "type": "array", "items": { "type": "string" } },
                "tracing": { "type": "string" },
                "dashboards": { "type": "array", "items": { "type": "string" } },
                "alerting": { "type": "array", "items": { "type": "string" } }
            }
        },
        "securityArchitecture": {
            "type": "object",
            "properties": {
                "threatModelRef": { "type": "string" },
                "secrets": { "type": "string" },
                "networkPolicies": { "type": "array", "items": { "type": "string" } },
                "authN": { "type": "string" },
                "authZ": { "type": "string" },
                "dataProtection": { "type": "object", "properties": { "atRest": { "type": "string" }, "inTransit": { "type": "string" } } }
            }
        },
        "availability": {
            "type": "object",
            "properties": {
                "sla": { "type": "string" },
                "slo": { "type": "object", "additionalProperties": { "type": "number" } },
                "rpo": { "type": "string" },
                "rto": { "type": "string" },
                "failover": { "type": "string" }
            }
        },
        "performance": {
            "type": "object",
            "properties": {
                "budgets": { "type": "object", "additionalProperties": { "type": "number" } },
                "capacityPlanning": { "type": "string" }
            }
        },
        "integrationPoints": {
            "type": "array",
            "items": { "type": "object", "properties": { "name": { "type": "string" }, "type": { "type": "string" }, "protocol": { "type": "string" }, "auth": { "type": "string" }, "rateLimits": { "type": "string" } } }
        },
        "eventing": {
            "type": "object",
            "properties": {
                "broker": { "type": "string" },
                "topics": { "type": "array", "items": { "type": "string" } },
                "schemas": { "type": "object", "additionalProperties": { "type": "object" } },
                "retention": { "type": "string" },
                "deliverySemantics": { "type": "string", "enum": ["at-most-once", "at-least-once", "exactly-once"] }
            }
        },
        "configuration": {
            "type": "object",
            "properties": {
                "featureFlags": { "type": "array", "items": { "type": "string" } },
                "configSchema": { "type": "object" }
            }
        },
        "risks": { "type": "array", "items": { "type": "string" } },
        "constraints": { "type": "array", "items": { "type": "string" } },
        "adrRefs": { "type": "array", "items": { "type": "string" } }
    },
    "required": ["architecturalPattern", "technologyStack"]
}