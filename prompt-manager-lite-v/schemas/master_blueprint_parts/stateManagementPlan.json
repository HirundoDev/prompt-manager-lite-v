{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$comment": "Playbook: prompt_playbooks/schemas_playbooks/playbook_schema-stateManagementPlan.md",
    "title": "State Management Plan",
    "description": "(Generated by Frontend Architect) The strategy and implementation details for managing application state.",
    "type": "object",
    "properties": {
        "strategy": {
            "type": "string",
            "enum": ["Global Store", "Component State", "Hybrid"],
            "description": "The overall approach to state management."
        },
        "library": {
            "type": "object",
            "properties": {
                "name": { "type": "string", "description": "e.g., Redux, MobX, Vuex, Pinia, Zustand, Context API" },
                "version": { "type": "string" }
            }
        },
        "stores": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "name": { "type": "string", "description": "The name of the state store or slice." },
                    "description": { "type": "string", "description": "A brief description of the data managed by this store." },
                    "scope": { "type": "string", "enum": ["client", "server", "shared"] },
                    "technology": { "type": "string" },
                    "persistence": { "type": "string", "description": "e.g., 'none', 'localStorage', 'indexedDB', 'server'" }
                }
            }
        },
        "entities": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "name": { "type": "string" },
                    "schemaRef": { "type": "string" },
                    "normalization": { "type": "string", "description": "e.g., 'byId', 'nested'" },
                    "cacheTTL": { "type": "integer" }
                }
            }
        },
        "sync": {
            "type": "object",
            "properties": {
                "strategies": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "from": { "type": "string" },
                            "to": { "type": "string" },
                            "method": { "type": "string" },
                            "conflictResolution": { "type": "string" }
                        }
                    }
                }
            }
        },
        "invariants": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "description": { "type": "string" },
                    "checks": { "type": "array", "items": { "type": "string" } }
                }
            }
        }
    }
}